
package interfaceMod;
import javax.swing.JFrame;
import org.jfree.chart.labels.AbstractCategoryItemLabelGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import java.text.NumberFormat;
import org.jfree.data.category.CategoryDataset;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.ChartPanel;
import java.awt.Dimension;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.ChartFactory;
import java.awt.Color;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import javax.swing.JPanel;
import org.jfree.ui.RefineryUtilities;
import org.jfree.chart.plot.PlotOrientation;
import com.lowagie.text.Font;

public  class  ItemLabelDemo1  extends  JFrame  {

static  class  LabelGenerator  extends  AbstractCategoryItemLabelGenerator implements  CategoryItemLabelGenerator  {
private  double  threshold;
public  LabelGenerator(double  threshold)
{
  super("",  NumberFormat.getInstance()); this.threshold  =  threshold;
}
/*  public  String  generateLabel(CategoryDataset  dataset, int  series, int  category)
  {
  String  result  =  null;
  Number  value  =  dataset.getValue(series,  category);
  if  (value  !=  null)
  {
    double  v  =  value.doubleValue();
    if  (v  >  this.threshold)
    {
      result  =  value.toString();    //  could  apply  formatting  here
    }
  }
return  result;
}*/
public  String  generateLabel(CategoryDataset  dataset, int  series, int  category)
{
String  result  =  null;
Number  value  =  dataset.getValue(series,  category);
result  =  value.toString();    //  could  apply  formatting  here
return  result;
}

}

public  ItemLabelDemo1(String  title)  {
super(title);
CategoryDataset  dataset  =  createDataset();
JFreeChart  chart  =  createChart(dataset);
ChartPanel  chartPanel  =  new  ChartPanel(chart);
chartPanel.setPreferredSize(new  Dimension(500,  270));
setContentPane(chartPanel);
}

private  static  CategoryDataset  createDataset()  {

DefaultCategoryDataset  dataset  =  new  DefaultCategoryDataset();
    dataset.addValue(11,"Row 1","Column 1");
    dataset.addValue(44.3,"Row 1","Column 2");
    dataset.addValue(93,"Row 1","Column 3");
    dataset.addValue(51,"Row 1","Column 4");
    dataset.addValue(75,"Row 1","Column 5");
    dataset.addValue(80,"Row 1","Column 6");

/*dataset.addValue(11.0,  "S1",  "C1");
dataset.addValue(44.3,  "S1",  "C2");
dataset.addValue(93.0,  "S1",  "C3");
dataset.addValue(35.6,  "S1",  "C4");
dataset.addValue(75.1,  "S1",  "C5"); */
return  dataset;

}

private  static  JFreeChart  createChart(CategoryDataset  dataset)  {
JFreeChart  chart  =  ChartFactory.createBarChart(
"Объём переданных данных",	//  chart  title
"Category",	//  domain  axis  label
"Value",	//  range  axis  label
dataset,	//  data
PlotOrientation.HORIZONTAL,
true,
true,
false	//  URLs?
);
  chart.setBackgroundPaint(Color.white);
  CategoryPlot  plot  =  chart.getCategoryPlot();
  plot.setBackgroundPaint(Color.lightGray);
  plot.setDomainGridlinePaint(Color.white);
  plot.setRangeGridlinePaint(Color.white);

  NumberAxis  rangeAxis  =  (NumberAxis)  plot.getRangeAxis();
  rangeAxis.setUpperMargin(0.15);

  CategoryItemRenderer  renderer  =  plot.getRenderer();
  renderer.setItemLabelGenerator(new  LabelGenerator(30));
  renderer.setItemLabelsVisible(true);

  return  chart;
}
public  static  JPanel  createDemoPanel()  {
JFreeChart  chart  =  createChart(createDataset());
return  new  ChartPanel(chart);
}



}
